<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<meta http-equiv="CONTENT-TYPE" content="text/html; charset=utf-8"><title>MARY HAD A LITTLE LAMB</title>

<link rel="stylesheet" type="text/css" href="default.css">
<link type="text/css" rel="stylesheet" href="/assets/cmirror/codemirror.css">
<link type="text/css" id="theme" rel="stylesheet" href="/assets/themes/solarized-dark.css">
<script type="text/javascript" src="/assets/cmirror/codemirror.js"></script>
<script type="text/javascript" src="/assets/cmirror/python.js"></script>
<script type="text/javascript" src="codeblocks.js"></script>
</head>
<body style="direction: ltr; color: rgb(0, 0, 10);" lang="en-US" link="#0563c1">
<header>
    <div id=title>MARY HAD A LITTLE LAMB</div>
    <div id=description>In this project, we continue using the sound library to play a version
	    of Mary Had a Little Lamb.</div>
    <div id=troubleshooting><a href="TROUBLESHOOTING.html">Having issues?  Check out the Troubleshooting Guide.</a></div>
</header>

<p>Below is an example of how you can play a musical tune using
the RaspberrySTEM:</p>
<div class="code" data-firstline="1">
<div></div>
<textarea>
from rstem.sound import Note

notes = [ Note('E'), 
	Note('D'), 
	Note('C'), 
	Note('D'), 
	Note('E'),
	Note('E'), 
	Note('E'), 
	Note('D'), 
	Note('D'), 
	Note('D'), 
	Note('E'),
	Note('G'), 
	Note('G'), 
	Note('E'), 
	Note('D'), 
	Note('C'), 
	Note('D'),
	Note('E'), 
	Note('E'), 
	Note('E'), 
	Note('E'), 
	Note('D'), 
	Note('D'),
	Note('E'), 
	Note('D'), 
	Note('C') ]

for note in notes: 
	note.play(duration=0.5) 
	note.wait()
</textarea></div>
<br><p>The code above is pretty simple -- we create a list of notes, and then we use a <span style="font-family: Courier New,Courier,monospace;">for</span> loop to loop through them, play each in turn. &nbsp;<br><br>Now,
the one big issue with this code is that each note is of a fixed
duration. &nbsp;But, in most songs, you have notes of varying length
(some longer and some shorter). &nbsp;We can modify this code so that
we can specify the length of each note independently. &nbsp;We do that
by creating a second list that contains the note durations, and in our <span style="font-family: Courier New,Courier,monospace;">for</span> loop, we use both the note and the duration in our <span style="font-family: Courier New,Courier,monospace;">play()</span> function.

<br>
<div class="info">
<div>"zip() Function"</div>
<div>
<p>
The zip() function provides a convenient way to combine two (or more) lists into one.  Just
like a zipper on jacket meshes together two rows of metal pins, the zip() function does the 
same things with lists.  zip() will take the first element of each list and combine them 
together.  It
will then take the second element of each list and combine those together.  And so on, until
the shortest list runs out of elements.</p>

<p>For example, imagine that you have two lists, one containing the name of all the people in a household
and one containing the age of all those people.  The lists might look like this:</p>

<pre>name = [Bob, Susie, Brian, Carol]</pre>
<pre>age = [31, 29, 7, 4]</pre>

<p>If we were to zip() those two lists together:</p>

<pre>zipped = zip(name, age)</pre>

<p>Our resulting list ("zipped") would contain the following:</p>

<pre>[(Bob, 31), (Susie, 29), (Brian, 7), (Carol, 4)]</pre>

<p>The zip() function is often helpful when traversing two related lists through a 
for loop, as we will do below.</p>
</div>
</div>

<br><br>Here is what the code would look like:</p>
<br>
<div class="code" data-firstline="1">
<div></div>
<textarea>
from rstem.sound import Note

notes = [ Note('E'), 
	Note('D'), 
	Note('C'), 
	Note('D'), 
	Note('E'),
	Note('E'), 
	Note('E'), 
	Note('D'), 
	Note('D'), 
	Note('D'), 
	Note('E'),
	Note('G'), 
	Note('G'), 
	Note('E'), 
	Note('D'), 
	Note('C'), 
	Note('D'),
	Note('E'), 
	Note('E'), 
	Note('E'), 
	Note('E'), 
	Note('D'), 
	Note('D'),
	Note('E'), 
	Note('D'), 
	Note('C') ]

durations = [ .5,
	.5, 
	.5,    
	.5,
	.5,
	.5,
	 1,
	.5,
	.5,
	1,
	.5,
	.5,
	1,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	.5,
	1 ]

for note, duration in zip(notes, durations): 
	note.play(duration=duration) 
	note.wait()
</textarea></div>

<p class="nextprev"><a href="SOUNDS_-_SPEAKER.html">prev</a>|
<a href="SIMPLE_PIANO.html">next</a></p>
</body></html>
